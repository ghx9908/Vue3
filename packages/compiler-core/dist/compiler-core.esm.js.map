{
  "version": 3,
  "sources": ["../src/parser.ts", "../src/index.ts"],
  "sourcesContent": ["import { NodeTypes } from \"./ast\";\n\n/**\n * \u521B\u5EFA\u89E3\u6790\u5668\u4E0A\u4E0B\u6587\n *\n * @param content \u5185\u5BB9\n * @returns \u8FD4\u56DE\u89E3\u6790\u5668\u4E0A\u4E0B\u6587\u5BF9\u8C61\n */\nfunction createParserContext(content) {\n  return {\n    // \u884C\u6570\n    line: 1,\n    // \u5217\u6570\n    column: 1,\n    // \u504F\u79FB\u91CF\n    offset: 0,\n    // \u6E90\u4EE3\u7801\n    source: content, // source\u4F1A\u4E0D\u505C\u7684\u88AB\u622A\u53D6\n    // \u539F\u59CB\u6E90\u4EE3\u7801\n    originalSource: content // \u539F\u59CB\u5185\u5BB9\n  }\n}\n/**\n * \u5224\u65AD\u662F\u5426\u5230\u8FBE\u6E90\u4EE3\u7801\u7684\u7ED3\u5C3E\u3002\n *\n * @param context - \u51FD\u6570\u8FD0\u884C\u4E0A\u4E0B\u6587\u3002\n * @returns \u5982\u679C\u6E90\u4EE3\u7801\u4E3A\u7A7A\uFF0C\u5219\u8FD4\u56DEtrue\uFF0C\u5426\u5219\u8FD4\u56DEfalse\u3002\n */\nfunction isEnd(context) {\n  const source = context.source;\n  return !source;\n}\n\n\n/**\n * \u66F4\u65B0\u6700\u65B0\u4E0A\u4E0B\u6587\u4FE1\u606F\n *\n * @param context \u4E0A\u4E0B\u6587\u5BF9\u8C61\n * @param s \u5B57\u7B26\u4E32\n * @param endIndex \u7ED3\u675F\u7D22\u5F15\n */\nfunction advancePositionWithMutation(context, s, endIndex) { // \u66F4\u65B0\u6700\u65B0\u4E0A\u4E0B\u6587\u4FE1\u606F\n  let linesCount = 0; // \u8BA1\u7B97\u884C\u6570\n  let linePos = -1; // \u8BA1\u7B97\u8D77\u59CB\u884C\u5F00\u59CB\u4F4D\u7F6E\n  for (let i = 0; i < endIndex; i++) {\n    if (s.charCodeAt(i) === 10) { // \u9047\u5230\\n\u5C31\u589E\u52A0\u4E00\u884C\n      linesCount++;\n      linePos = i; // \u8BB0\u5F55\u6362\u884C\u540E\u7684\u5B57\u8282\u4F4D\u7F6E\n    }\n  }\n  context.offset += endIndex; // \u7D2F\u52A0\u504F\u79FB\u91CF\n  context.line += linesCount; // \u7D2F\u52A0\u884C\u6570\n  // \u8BA1\u7B97\u5217\u6570\uFF0C\u5982\u679C\u65E0\u6362\u884C,\u5219\u76F4\u63A5\u5728\u539F\u5217\u57FA\u7840 + \u6587\u672C\u672B\u5C3E\u4F4D\u7F6E\uFF0C\u5426\u5219 \u603B\u4F4D\u7F6E\u51CF\u53BB\u6362\u884C\u540E\u7684\u5B57\u8282\u4F4D\u7F6E\n  context.column = linePos == -1 ? context.column + endIndex : endIndex - linePos\n}\n\nfunction advanceBy(context, endIndex) {\n  let s = context.source;\n  advancePositionWithMutation(context, s, endIndex) // \u66F4\u6539\u4F4D\u7F6E\u4FE1\u606F\n  // \u5220\u9664\u89E3\u6790\u540E\u7684\u5185\u5BB9\n  context.source = s.slice(endIndex);\n}\nfunction parseTextData(context, endIndex) {\n  const rawText = context.source.slice(0, endIndex);\n  // \u5220\u9664\u5DF2\u7ECF\u89E3\u6790\u7684\u5185\u5BB9\n  advanceBy(context, endIndex); // \u622A\u53D6\u5185\u5BB9\n  return rawText\n}\n\nfunction getCursor(context) { // \u83B7\u53D6\u5F53\u524D\u4F4D\u7F6E\n  let { line, column, offset } = context;\n  return { line, column, offset }\n}\n\nfunction getSelection(context, start, end?) {\n  end = getCursor(context);\n  return {\n    start,\n    end,\n    source: context.originalSource.slice(start.offset, end.offset)\n  }\n}\n/**\n * \u89E3\u6790\u6587\u672C\n *\n * @param context \u89E3\u6790\u4E0A\u4E0B\u6587ds\n * @returns \u8FD4\u56DE\u89E3\u6790\u540E\u7684\u6587\u672C\n */\nfunction parseText(context) { // 123123{{name}}</div>\n  const endTokens = ['<', '{{'];\n  let endIndex = context.source.length; // \u6587\u672C\u7684\u603B\u957F\u5EA6\n  // \u5047\u8BBE\u9047\u5230 < \u5C31\u662F\u6587\u672C\u7684\u7ED3\u5C3E \u3002 \u5728\u5047\u8BBE\u9047\u5230{{ \u662F\u6587\u672C\u7ED3\u5C3E\u3002 \u6700\u540E\u627E\u79BB\u7684\u8FD1\u7684\n  // \u5047\u8BBE\u6CD5\n  for (let i = 0; i < endTokens.length; i++) {\n    const index = context.source.indexOf(endTokens[i], 1);\n    if (index !== -1 && endIndex > index) {\n      endIndex = index;\n    }\n  }\n  let start = getCursor(context); // 1.\u83B7\u53D6\u6587\u672C\u5F00\u59CB\u4F4D\u7F6E\n  const content = parseTextData(context, endIndex); // 2.\u5904\u7406\u6587\u672C\u6570\u636E\n  return {\n    type: NodeTypes.TEXT,// \u6587\u672C\u7C7B\u578B\n    content, // \u6587\u672C\u5185\u5BB9\n    loc: getSelection(context, start) // 3.\u83B7\u53D6\u6587\u672C\u4F4D\u7F6E\u4FE1\u606F\u00DF\u00DF\n  }\n\n}\n\n/**\n * \u89E3\u6790\u63D2\u503C\u8868\u8FBE\u5F0F\n *\n * @param context \u4E0A\u4E0B\u6587\n * @returns \u63D2\u503C\u8868\u8FBE\u5F0F\u5BF9\u8C61\n */\nfunction parseInterpolation(context) {//{{ name}}\n\n  // \u83B7\u53D6\u8868\u8FBE\u5F0F\u7684\u5F00\u5934\u4F4D\u7F6E\n  const start = getCursor(context);\n  // \u627E\u5230\u7ED3\u675F\u4F4D\u7F6E\n  const closeIndex = context.source.indexOf('}}', 2);\n  // \u53BB\u6389  {{\n  advanceBy(context, 2);\n  // \u8BA1\u7B97\u91CC\u9762\u5F00\u59CB\u548C\u7ED3\u675F\n  const innerStart = getCursor(context);\n  const innerEnd = getCursor(context);\n  // \u62FF\u5230\u539F\u59CB{{}}\u4E2D\u5185\u5BB9\u957F\u5EA6\n  const rawContentLength = closeIndex - 2;\n  // \u89E3\u6790\u6587\u672C\u6570\u636E\n  const preTrimContent = parseTextData(context, rawContentLength);\n  // \u53BB\u9664\u4E24\u8FB9\u7684\u7A7A\u683C\n  const content = preTrimContent.trim();\n  // \u83B7\u53D6\u5185\u5BB9\u7684\u8D77\u59CB\u4F4D\u7F6E\n  const startOffest = preTrimContent.indexOf(content);\n  if (startOffest > 0) { // \u6709\u7A7A\u683C\n    // \u8BA1\u7B97\u8868\u8FBE\u5F0F\u5F00\u59CB\u4F4D\u7F6E\n    advancePositionWithMutation(innerStart, preTrimContent, startOffest);\n  }\n  // \u83B7\u53D6\u5185\u5BB9\u7684\u7ED3\u675F\u4F4D\u7F6E\n  const endOffset = content.length + startOffest;\n  // \u8BA1\u7B97\u8868\u8FBE\u5F0F\u7ED3\u675F\u4F4D\u7F6E\n  advancePositionWithMutation(innerEnd, preTrimContent, endOffset)\n  // \u53BB\u6389}}\n  advanceBy(context, 2);\n  return {\n    type: NodeTypes.INTERPOLATION,\n    content: {\n      type: NodeTypes.SIMPLE_EXPRESSION,\n      isStatic: false,\n      content,\n      // \u9700\u8981\u4FEE\u6539getSelection\u65B9\u6CD5\n      loc: getSelection(context, innerStart, innerEnd)\n    },\n    loc: getSelection(context, start)\n  }\n}\n\n\nfunction parseChildren(context) {\n  const nodes = [];// \u5B58\u50A8\u89E3\u6790\u540E\u7684\u8282\u70B9\n  while (!isEnd(context)) {\n    const s = context.source; // \u83B7\u53D6\u5F53\u524D\u5185\u5BB9\n    let node;// \u5B58\u50A8\u5F53\u524D\u8282\u70B9\n    if (s.startsWith('{{')) { // \u5904\u7406\u8868\u8FBE\u5F0F\u7C7B\u578B\n      node = parseInterpolation(context);\n    } else if (s[0] === '<') { // \u6807\u7B7E\u7684\u5F00\u5934\n\n      if (/[a-z]/i.test(s[1])) {\n        node = {}\n      } // \u5F00\u59CB\u6807\u7B7E\n    }\n    if (!node) { // \u6587\u672C\u7684\u5904\u7406\n      node = parseText(context);\n\n    }\n    nodes.push(node);\n\n  }\n  return nodes;\n}\n/**\n * \u5C06\u7ED9\u5B9A\u7684\u6A21\u677F\u89E3\u6790\u4E3A\u62BD\u8C61\u8BED\u6CD5\u6811\u3002\n *\n * @param template \u8981\u89E3\u6790\u7684\u6A21\u677F\n * @returns \u8FD4\u56DE\u89E3\u6790\u540E\u7684\u62BD\u8C61\u8BED\u6CD5\u6811\n */\nexport function baseParse(template) {\n  // \u521B\u5EFA\u89E3\u6790\u4E0A\u4E0B\u6587 \u884C\u6570 \u5217\u6570 \u6E90\u4EE3\u7801\n  const context = createParserContext(template);\n  return parseChildren(context);\n}\n\n\n", "import { baseParse } from \"./parser\";\n\nexport function compile(template) {\n  // 1.\u5C06\u6A21\u677F\u8F6C\u5316\u6210ast\u8BED\u6CD5\u6811\n  return baseParse(template);\n\n}\n"],
  "mappings": "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",
  "names": []
}
