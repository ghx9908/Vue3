{
  "version": 3,
  "sources": ["../src/parser.ts", "../src/runtimeHelpers.ts", "../src/transform.ts", "../src/index.ts"],
  "sourcesContent": ["import { NodeTypes } from \"./ast\";\n\n/**\n * \u521B\u5EFA\u89E3\u6790\u5668\u4E0A\u4E0B\u6587\n *\n * @param content \u5185\u5BB9\n * @returns \u8FD4\u56DE\u89E3\u6790\u5668\u4E0A\u4E0B\u6587\u5BF9\u8C61\n */\nfunction createParserContext(content) {\n  return {\n    // \u884C\u6570\n    line: 1,\n    // \u5217\u6570\n    column: 1,\n    // \u504F\u79FB\u91CF\n    offset: 0,\n    // \u6E90\u4EE3\u7801\n    source: content, // source\u4F1A\u4E0D\u505C\u7684\u88AB\u622A\u53D6\n    // \u539F\u59CB\u6E90\u4EE3\u7801\n    originalSource: content // \u539F\u59CB\u5185\u5BB9\n  }\n}\n/**\n * \u5224\u65AD\u662F\u5426\u5230\u8FBE\u6E90\u4EE3\u7801\u7684\u7ED3\u5C3E\u3002\n *\n * @param context - \u51FD\u6570\u8FD0\u884C\u4E0A\u4E0B\u6587\u3002\n * @returns \u5982\u679C\u6E90\u4EE3\u7801\u4E3A\u7A7A\uFF0C\u5219\u8FD4\u56DEtrue\uFF0C\u5426\u5219\u8FD4\u56DEfalse\u3002\n */\nfunction isEnd(context) {\n  const source = context.source;\n  if (context.source.startsWith('</')) { // \u5982\u679C\u9047\u5230\u7ED3\u675F\u6807\u7B7E\u8BF4\u660E\u6CA1\u6709\u5B50\u8282\u70B9\n    return true;\n  }\n  return !source;\n}\n\n\n/**\n * \u66F4\u65B0\u6700\u65B0\u4E0A\u4E0B\u6587\u4FE1\u606F\n *\n * @param context \u4E0A\u4E0B\u6587\u5BF9\u8C61\n * @param s \u5B57\u7B26\u4E32\n * @param endIndex \u7ED3\u675F\u7D22\u5F15\n */\nfunction advancePositionWithMutation(context, s, endIndex) { // \u66F4\u65B0\u6700\u65B0\u4E0A\u4E0B\u6587\u4FE1\u606F\n  let linesCount = 0; // \u8BA1\u7B97\u884C\u6570\n  let linePos = -1; // \u8BA1\u7B97\u8D77\u59CB\u884C\u5F00\u59CB\u4F4D\u7F6E\n  for (let i = 0; i < endIndex; i++) {\n    if (s.charCodeAt(i) === 10) { // \u9047\u5230\\n\u5C31\u589E\u52A0\u4E00\u884C\n      linesCount++;\n      linePos = i; // \u8BB0\u5F55\u6362\u884C\u540E\u7684\u5B57\u8282\u4F4D\u7F6E\n    }\n  }\n  context.offset += endIndex; // \u7D2F\u52A0\u504F\u79FB\u91CF\n  context.line += linesCount; // \u7D2F\u52A0\u884C\u6570\n  // \u8BA1\u7B97\u5217\u6570\uFF0C\u5982\u679C\u65E0\u6362\u884C,\u5219\u76F4\u63A5\u5728\u539F\u5217\u57FA\u7840 + \u6587\u672C\u672B\u5C3E\u4F4D\u7F6E\uFF0C\u5426\u5219 \u603B\u4F4D\u7F6E\u51CF\u53BB\u6362\u884C\u540E\u7684\u5B57\u8282\u4F4D\u7F6E\n  context.column = linePos == -1 ? context.column + endIndex : endIndex - linePos\n}\n\nfunction advanceBy(context, endIndex) {\n  let s = context.source;\n  advancePositionWithMutation(context, s, endIndex) // \u66F4\u6539\u4F4D\u7F6E\u4FE1\u606F\n  // \u5220\u9664\u89E3\u6790\u540E\u7684\u5185\u5BB9\n  context.source = s.slice(endIndex);\n}\nfunction parseTextData(context, endIndex) {\n  const rawText = context.source.slice(0, endIndex);\n  // \u5220\u9664\u5DF2\u7ECF\u89E3\u6790\u7684\u5185\u5BB9\n  advanceBy(context, endIndex); // \u622A\u53D6\u5185\u5BB9\n  return rawText\n}\n\nfunction getCursor(context) { // \u83B7\u53D6\u5F53\u524D\u4F4D\u7F6E\n  let { line, column, offset } = context;\n  return { line, column, offset }\n}\n\nfunction getSelection(context, start, end?) {\n  end = getCursor(context);\n  return {\n    start,\n    end,\n    source: context.originalSource.slice(start.offset, end.offset)\n  }\n}\n/**\n * \u89E3\u6790\u6587\u672C\n *\n * @param context \u89E3\u6790\u4E0A\u4E0B\u6587ds\n * @returns \u8FD4\u56DE\u89E3\u6790\u540E\u7684\u6587\u672C\n */\nfunction parseText(context) { // 123123{{name}}</div>\n  const endTokens = ['<', '{{'];\n  let endIndex = context.source.length; // \u6587\u672C\u7684\u603B\u957F\u5EA6\n  // \u5047\u8BBE\u9047\u5230 < \u5C31\u662F\u6587\u672C\u7684\u7ED3\u5C3E \u3002 \u5728\u5047\u8BBE\u9047\u5230{{ \u662F\u6587\u672C\u7ED3\u5C3E\u3002 \u6700\u540E\u627E\u79BB\u7684\u8FD1\u7684\n  // \u5047\u8BBE\u6CD5\n  for (let i = 0; i < endTokens.length; i++) {\n    const index = context.source.indexOf(endTokens[i], 1);\n    if (index !== -1 && endIndex > index) {\n      endIndex = index;\n    }\n  }\n  let start = getCursor(context); // 1.\u83B7\u53D6\u6587\u672C\u5F00\u59CB\u4F4D\u7F6E\n  const content = parseTextData(context, endIndex); // 2.\u5904\u7406\u6587\u672C\u6570\u636E\n  return {\n    type: NodeTypes.TEXT,// \u6587\u672C\u7C7B\u578B\n    content, // \u6587\u672C\u5185\u5BB9\n    loc: getSelection(context, start) // 3.\u83B7\u53D6\u6587\u672C\u4F4D\u7F6E\u4FE1\u606F\u00DF\u00DF\n  }\n\n}\n\n/**\n * \u5220\u9664\u7A7A\u683C\n *\n * @param context \u4E0A\u4E0B\u6587\u5BF9\u8C61\n */\nfunction advanceSpaces(context) {\n  // \u5339\u914D\u4E00\u4E2A\u6216\u591A\u4E2A\u7A7A\u683C\u3001\u5236\u8868\u7B26\u3001\u56DE\u8F66\u548C\u6362\u884C\u7B26\n  const match = /^[ \\t\\r\\n]+/.exec(context.source);\n  if (match) {\n    // \u901A\u8FC7\u8C03\u7528 advanceBy \u51FD\u6570\u6765\u524D\u8FDB\u5230\u5339\u914D\u5230\u7684\u7A7A\u683C\u7684\u672B\u5C3E\n    advanceBy(context, match[0].length);\n  }\n}\n\n/**\n * \u89E3\u6790\u5C5E\u6027\u503C\n *\n * @param context - \u89E3\u6790\u4E0A\u4E0B\u6587\n * @returns \u8FD4\u56DE\u5305\u542B\u5185\u5BB9\u53CA\u4F4D\u7F6E\u4FE1\u606F\u7684\u5BF9\u8C61\n */\nfunction parseAttributeValue(context) {\n  // \u83B7\u53D6\u5F53\u524D\u5149\u6807\u4F4D\u7F6E\n  const start = getCursor(context);\n  // \u83B7\u53D6\u7B2C\u4E00\u4E2A\u5B57\u7B26\uFF0C\u53EF\u80FD\u662F\u5F15\u53F7\n  const quote = context.source[0];\n  let content;\n  // \u5224\u65AD\u662F\u5426\u662F\u5E26\u5F15\u53F7\u7684\n  const isQuoteed = quote === '\"' || quote === \"'\";\n  if (isQuoteed) {\n    // \u79FB\u52A8\u5149\u6807\u5230\u4E0B\u4E00\u4E2A\u5B57\u7B26\n    advanceBy(context, 1);\n    // \u83B7\u53D6\u5F15\u53F7\u7ED3\u675F\u7684\u4F4D\u7F6E\n    const endIndex = context.source.indexOf(quote);\n    // \u89E3\u6790\u5F15\u53F7\u4E2D\u95F4\u7684\u503C\n    content = parseTextData(context, endIndex);  // \u89E3\u6790\u5F15\u53F7\u4E2D\u95F4\u7684\u503C\n    // \u79FB\u52A8\u5149\u6807\u5230\u5F15\u53F7\u540E\u9762\n    advanceBy(context, 1);\n  }\n  // \u8FD4\u56DE\u89E3\u6790\u7ED3\u679C\n  return { content, loc: getSelection(context, start) }\n}\n\n/**\n * \u89E3\u6790\u5C5E\u6027\n *\n * @param context \u89E3\u6790\u4E0A\u4E0B\u6587\n * @returns \u8FD4\u56DE\u89E3\u6790\u540E\u7684\u5C5E\u6027\u5BF9\u8C61\n */\nfunction parseAttribute(context) {\n  // \u83B7\u53D6\u5F53\u524D\u5149\u6807\u4F4D\u7F6E\n  const start = getCursor(context);\n\n  // \u5339\u914D\u5C5E\u6027\u540D\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source)!\n  // \u6355\u83B7\u5230\u5C5E\u6027\u540D\n  const name = match[0]; // \u6355\u83B7\u5230\u5C5E\u6027\u540D\n\n  // \u5220\u9664\u5C5E\u6027\u540D\n  advanceBy(context, name.length); // \u5220\u9664\u5C5E\u6027\u540D\n\n  let value\n  // \u5220\u9664\u7A7A\u683C \u7B49\u53F7\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) { // \u5220\u9664\u7A7A\u683C \u7B49\u53F7\n    advanceSpaces(context);\n    advanceBy(context, 1); // \u5220\u9664\u7B49\u53F7\n    advanceSpaces(context); // \u5220\u9664\u7A7A\u683C\n    value = parseAttributeValue(context); // \u89E3\u6790\u5C5E\u6027\u503C\n  }\n\n  // \u83B7\u53D6\u9009\u533A\n  const loc = getSelection(context, start)\n\n  return {\n    type: NodeTypes.ATTRIBUTE,\n    name,\n    value: {\n      type: NodeTypes.TEXT,\n      content: value.content,\n\n    },\n    loc\n  }\n}\n\n/**\n * \u89E3\u6790\u5C5E\u6027\n *\n * @param context \u89E3\u6790\u4E0A\u4E0B\u6587\n * @returns \u89E3\u6790\u540E\u7684\u5C5E\u6027\u6570\u7EC4\n */\nfunction parseAttributes(context) {\n  // \u521B\u5EFA\u4E00\u4E2A\u7A7A\u6570\u7EC4\u7528\u4E8E\u5B58\u50A8\u5C5E\u6027\n  const props: any = [];\n  // \u5F53\u8FD8\u6709\u5269\u4F59\u7684\u6E90\u4EE3\u7801\u4E14\u4E0D\u4EE5 '>' \u5F00\u5934\u65F6\n  while (context.source.length > 0 && !context.source.startsWith('>')) {\n    // \u89E3\u6790\u5C5E\u6027\n    const attr = parseAttribute(context)\n    // \u5C06\u89E3\u6790\u51FA\u7684\u5C5E\u6027\u6DFB\u52A0\u5230\u6570\u7EC4\u4E2D\n    props.push(attr);\n    // \u89E3\u6790\u4E00\u4E2A\u53BB\u7A7A\u683C\u4E00\u4E2A\n    advanceSpaces(context); // \u89E3\u6790\u4E00\u4E2A\u53BB\u7A7A\u683C\u4E00\u4E2A\n  }\n  // \u8FD4\u56DE\u89E3\u6790\u51FA\u7684\u5C5E\u6027\u6570\u7EC4\n  return props\n}\n\n/**\n * \u89E3\u6790\u6807\u7B7E\u51FD\u6570\n *\n * @param context - \u89E3\u6790\u4E0A\u4E0B\u6587\n * @returns \u8FD4\u56DE\u89E3\u6790\u540E\u7684\u6807\u7B7E\u5BF9\u8C61\n */\nfunction parseTag(context) {\n  const start = getCursor(context);\n  // 2.\u5339\u914D\u6807\u7B7E\u540D\n  const match = /^<\\/?([a-z][^ \\t\\r\\n/>]*)/.exec(context.source);\n  const tag = match[1];\n  advanceBy(context, match[0].length); // \u5220\u9664\u6807\u7B7E\n  advanceSpaces(context); // \u5220\u9664\u7A7A\u683C\n  let props = parseAttributes(context); // \u5904\u7406\u5C5E\u6027\n  const isSelfClosing = context.source.startsWith('/>'); // \u662F\u5426\u662F\u81EA\u95ED\u5408\n  advanceBy(context, isSelfClosing ? 2 : 1); // \u5220\u9664\u95ED\u5408 /> >\n  // ......\n  return {\n    // \u5143\u7D20\u7C7B\u578B\n    type: NodeTypes.ELEMENT,\n    // \u6807\u7B7E\u540D\n    tag,\n    // \u662F\u5426\u81EA\u95ED\u5408\n    isSelfClosing,\n    // \u4F4D\u7F6E\u4FE1\u606F\n    loc: getSelection(context, start),\n    // \u5C5E\u6027\n    props\n\n  }\n}\n/**\n * \u89E3\u6790\u63D2\u503C\u8868\u8FBE\u5F0F\n *\n * @param context \u4E0A\u4E0B\u6587\n * @returns \u63D2\u503C\u8868\u8FBE\u5F0F\u5BF9\u8C61\n */\nfunction parseInterpolation(context) {//{{ name}}\n\n  // \u83B7\u53D6\u8868\u8FBE\u5F0F\u7684\u5F00\u5934\u4F4D\u7F6E\n  const start = getCursor(context);\n  // \u627E\u5230\u7ED3\u675F\u4F4D\u7F6E\n  const closeIndex = context.source.indexOf('}}', 2);\n  // \u53BB\u6389  {{\n  advanceBy(context, 2);\n  // \u8BA1\u7B97\u91CC\u9762\u5F00\u59CB\u548C\u7ED3\u675F\n  const innerStart = getCursor(context);\n  const innerEnd = getCursor(context);\n  // \u62FF\u5230\u539F\u59CB{{}}\u4E2D\u5185\u5BB9\u957F\u5EA6\n  const rawContentLength = closeIndex - 2;\n  // \u89E3\u6790\u6587\u672C\u6570\u636E\n  const preTrimContent = parseTextData(context, rawContentLength);\n  // \u53BB\u9664\u4E24\u8FB9\u7684\u7A7A\u683C\n  const content = preTrimContent.trim();\n  // \u83B7\u53D6\u5185\u5BB9\u7684\u8D77\u59CB\u4F4D\u7F6E\n  const startOffest = preTrimContent.indexOf(content);\n  if (startOffest > 0) { // \u6709\u7A7A\u683C\n    // \u8BA1\u7B97\u8868\u8FBE\u5F0F\u5F00\u59CB\u4F4D\u7F6E\n    advancePositionWithMutation(innerStart, preTrimContent, startOffest);\n  }\n  // \u83B7\u53D6\u5185\u5BB9\u7684\u7ED3\u675F\u4F4D\u7F6E\n  const endOffset = content.length + startOffest;\n  // \u8BA1\u7B97\u8868\u8FBE\u5F0F\u7ED3\u675F\u4F4D\u7F6E\n  advancePositionWithMutation(innerEnd, preTrimContent, endOffset)\n  // \u53BB\u6389}}\n  advanceBy(context, 2);\n  return {\n    type: NodeTypes.INTERPOLATION,\n    content: {\n      type: NodeTypes.SIMPLE_EXPRESSION,\n      isStatic: false,\n      content,\n      // \u9700\u8981\u4FEE\u6539getSelection\u65B9\u6CD5\n      loc: getSelection(context, innerStart, innerEnd)\n    },\n    loc: getSelection(context, start)\n  }\n}\n\n/**\n * \u89E3\u6790\u5143\u7D20\n *\n * @param context \u89E3\u6790\u4E0A\u4E0B\u6587\n * @returns \u8FD4\u56DE\u89E3\u6790\u540E\u7684\u5143\u7D20\n */\nfunction parseElement(context) {\n  let ele = parseTag(context);\n  const children = parseChildren(context); // \u56E0\u4E3A\u7ED3\u5C3E\u6807\u7B7E, \u4F1A\u518D\u6B21\u89E6\u53D1parseElement,\u8FD9\u91CC\u5982\u679C\u662F\u7ED3\u5C3E\u9700\u8981\u505C\u6B62\n  if (context.source.startsWith('</')) {\n    parseTag(context); //\u5220\u9664\u95ED\u5408\u6807\u7B7E\n  }\n  ele.loc = getSelection(context, ele.loc.start); // \u66F4\u65B0\u6700\u7EC8\u4F4D\u7F6E\n  (ele as any).children = children; // \u6DFB\u52A0children\n  return ele;\n}\n\n\nfunction parseChildren(context) {\n  const nodes = [];// \u5B58\u50A8\u89E3\u6790\u540E\u7684\u8282\u70B9\n  while (!isEnd(context)) {\n    const s = context.source; // \u83B7\u53D6\u5F53\u524D\u5185\u5BB9\n    let node;// \u5B58\u50A8\u5F53\u524D\u8282\u70B9\n    if (s.startsWith('{{')) { // \u5904\u7406\u8868\u8FBE\u5F0F\u7C7B\u578B\n      node = parseInterpolation(context);\n    } else if (s[0] === '<') { // \u6807\u7B7E\u7684\u5F00\u5934\n\n      if (/[a-z]/i.test(s[1])) {\n        node = parseElement(context);\n      } // \u5F00\u59CB\u6807\u7B7E\n    }\n    if (!node) { // \u6587\u672C\u7684\u5904\u7406\n      node = parseText(context);\n\n    }\n    nodes.push(node);\n\n  }\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (node.type == NodeTypes.TEXT) { // \u5982\u679C\u662F\u6587\u672C \u5220\u9664\u7A7A\u767D\u6587\u672C\uFF0C\u5176\u4ED6\u7684\u7A7A\u683C\u53D8\u4E3A\u4E00\u4E2A\n      if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\n        nodes[i] = null\n      } else {\n        node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ')\n      }\n    }\n  }\n  return nodes.filter(Boolean)\n}\n\nexport function createRoot(children, loc) {\n  return {\n    type: NodeTypes.ROOT,\n    children,\n    loc\n  }\n}\n/**\n * \u5C06\u7ED9\u5B9A\u7684\u6A21\u677F\u89E3\u6790\u4E3A\u62BD\u8C61\u8BED\u6CD5\u6811\u3002\n *\n * @param template \u8981\u89E3\u6790\u7684\u6A21\u677F\n * @returns \u8FD4\u56DE\u89E3\u6790\u540E\u7684\u62BD\u8C61\u8BED\u6CD5\u6811\n */\nexport function baseParse(template) {\n  // \u6807\u8BC6\u8282\u70B9\u7684\u4FE1\u606F  \u884C \u5217 \u504F\u79FB\u91CF\n  const context = createParserContext(template);\n  const start = getCursor(context);\n  return createRoot(\n    parseChildren(context),\n    getSelection(context, start)\n  )\n}\n", "import { NodeTypes } from \"./ast\";\n\nexport const TO_DISPLAY_STRING = Symbol(`toDisplayString`);\nexport const CREATE_TEXT = Symbol(\"createTextVNode\");\nexport const CREATE_ELEMENT_VNODE = Symbol(\"createElementVNode\");\nexport const FRAGMENT = Symbol(\"FRAGMENT\");\nexport const CREATE_ELEMENT_BLOCK = Symbol(`createElementBlock`)\nexport const OPEN_BLOCK = Symbol(`openBlock`)\nexport const helperNameMap = {\n  [TO_DISPLAY_STRING]: \"toDisplayString\",\n  [CREATE_TEXT]: \"createTextVNode\",\n  [CREATE_ELEMENT_VNODE]: \"createElementVNode\", // \u521B\u5EFA\u5143\u7D20\u8282\u70B9\u6807\u8BC6\n  [FRAGMENT]: \"Fragment\",\n  [OPEN_BLOCK]: `openBlock`,  // block\u5904\u7406\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`\n}\n\n\nexport function createCallExpression(context, args) {\n  context.helper(CREATE_TEXT);\n  return {\n    type: NodeTypes.JS_CALL_EXPRESSION, // createTextVnode()\n    arguments: args,\n  };\n}\n\nexport function createVNodeCall(context, tag, props, children) {\n  context.helper(CREATE_ELEMENT_VNODE);\n  return {\n    type: NodeTypes.VNODE_CALL,//createElementVNode\n    tag,\n    props,\n    children\n  }\n}\n\nexport function createObjectExpression(properties) {\n  return {\n    type: NodeTypes.JS_OBJECT_EXPRESSION,\n    properties\n  }\n}\n", "import { NodeTypes } from \"./ast\";\n\nimport { TO_DISPLAY_STRING, createCallExpression, createVNodeCall, createObjectExpression, CREATE_ELEMENT_VNODE } from \"./runtimeHelpers\";\nexport const FRAGMENT = Symbol(\"FRAGMENT\");\nexport const CREATE_ELEMENT_BLOCK = Symbol(`createElementBlock`)\nexport const OPEN_BLOCK = Symbol(`openBlock`)\nexport const helperNameMap = {\n  [FRAGMENT]: \"Fragment\",\n  [OPEN_BLOCK]: `openBlock`,  // block\u5904\u7406\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`\n}\nimport { PatchFlags } from \"packages/shared/src/patchFlags\";\n\nfunction isText(node) {\n  return node.type == NodeTypes.INTERPOLATION || node.type == NodeTypes.TEXT;\n}\n\n\nexport function transformElement(node, context) {\n  if (node.type === NodeTypes.ELEMENT) {\n    return function postTransformElement() { // \u5143\u7D20\u5904\u7406\u7684\u9000\u51FA\u51FD\u6570\n      let vnodeTag = `'${node.tag}'`;\n      let properties = [];\n      let props = node.props\n      for (let i = 0; i < props.length; i++) { // \u8FD9\u91CC\u5C5E\u6027\u5176\u5B9E\u5E94\u8BE5\u5728codegen\u91CC\u5728\u5904\u7406\n        properties.push({\n          key: props[i].name,\n          value: props[i].value.content\n        })\n      }\n      const propsExpression = props.length > 0 ? createObjectExpression(properties) : null\n      let vnodeChildren = null;\n      if (node.children.length === 1) {\n        // \u53EA\u6709\u4E00\u4E2A\u5B69\u5B50\u8282\u70B9 \uFF0C\u90A3\u4E48\u5F53\u751F\u6210 render \u51FD\u6570\u7684\u65F6\u5019\u5C31\u4E0D\u7528 [] \u5305\u88F9\n        const child = node.children[0];\n        vnodeChildren = child;\n      } else {\n        if (node.children.length > 0) { // \u5904\u7406\u513F\u5B50\u8282\u70B9\n          vnodeChildren = node.children\n        }\n      }\n      // \u4EE3\u7801\u751F\u6210\n      node.codegenNode = createVNodeCall(context, vnodeTag, propsExpression, vnodeChildren);\n    }\n  }\n}\n\nexport function transformText(node, context) {\n  if (node.type === NodeTypes.ELEMENT || node.type === NodeTypes.ROOT) {\n    return () => {\n      // \u5982\u679C\u8FD9\u4E2A\u5143\u7D20\n      let hasText = false;\n      const children = node.children;\n      let currentContainer = undefined // \u5408\u5E76\u513F\u5B50\n      for (let i = 0; i < children.length; i++) {\n        let child = children[i];\n        if (isText(child)) {\n          hasText = true;\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j];\n            if (isText(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = { // \u5408\u5E76\u8868\u8FBE\u5F0F\n                  type: NodeTypes.COMPOUND_EXPRESSION,\n                  loc: child.loc,\n                  children: [child]\n                }\n              }\n              currentContainer.children.push(` + `, next);\n              children.splice(j, 1);\n              j--;\n            } else {\n              currentContainer = undefined;\n              break;\n            }\n          }\n        }\n      }\n      if (!hasText || children.length == 1) { // \u4E00\u4E2A\u5143\u7D20\u4E0D\u7528\u7BA1\uFF0C\u53EF\u4EE5\u6267\u884CinnerHTML\n        return\n      }\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i]\n        if (isText(child) || child.type === NodeTypes.COMPOUND_EXPRESSION) {\n          const callArgs = []\n          callArgs.push(child)\n          if (child.type !== NodeTypes.TEXT) { // \u5982\u679C\u4E0D\u662F\u6587\u672C\n            callArgs.push(PatchFlags.TEXT + '')\n          }\n          // \u5168\u90E8\u683C\u5F0F\u8BDD\u6210\u6587\u672C\u8C03\u7528\n          children[i] = {\n            type: NodeTypes.TEXT_CALL, // \u6700\u7EC8\u9700\u8981\u53D8\u6210createTextVnode() \u589E\u52A0patchFlag\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(context, callArgs) // \u521B\u5EFA\u8868\u8FBE\u5F0F\u8C03\u7528\n          }\n        }\n      }\n    }\n  }\n}\nfunction transformExpression(node, context) {\n  if (node.type == NodeTypes.INTERPOLATION) {\n    node.content.content = `_ctx.${node.content.content}`; // \u4FEE\u6539content\u4FE1\u606F\n  }\n}\n\n\n/**\n * \u904D\u5386\u8282\u70B9\n * vue2 \u4E2D\u8F6C\u5316 \u53EA\u505A\u4E86\u6807\u8BB0\uFF0C vue3\u4E2DpatchFlags, block\u7684\u5904\u7406\n * @param node \u9700\u8981\u904D\u5386\u7684\u8282\u70B9\n * @param context \u4E0A\u4E0B\u6587\n */\nfunction traverseNode(node, context) {\n  // \u8BBE\u7F6E\u5F53\u524D\u8282\u70B9\u4E3Anode\n  context.currentNode = node;\n  // \u83B7\u53D6\u8282\u70B9\u8F6C\u6362\u65B9\u6CD5\u96C6\u5408\n  const transforms = context.nodeTransforms;\n  const exitsFns = [] //\u5B58\u50A8\u6240\u6709\u7684\u9000\u51FA\u51FD\u6570\n  // \u904D\u5386\u6240\u6709\u8F6C\u6362\u65B9\u6CD5\n  for (let i = 0; i < transforms.length; i++) {\n    // \u8C03\u7528\u8F6C\u5316\u65B9\u6CD5\u8FDB\u884C\u8F6C\u5316\n    let onExit = transforms[i](node, context); // \u8C03\u7528\u8F6C\u5316\u65B9\u6CD5\u8FDB\u884C\u8F6C\u5316\n    if (onExit) {\n      exitsFns.push(onExit)\n    }\n    // \u5982\u679Ccontext.currentNode\u4E3A\u7A7A\uFF0C\u5219\u7EC8\u6B62\u904D\u5386\n    if (!context.currentNode) return\n  }\n  // \u6839\u636E\u8282\u70B9\u7C7B\u578B\u8FDB\u884C\u4E0D\u540C\u7684\u5904\u7406\n  switch (node.type) {\n    case NodeTypes.ELEMENT:\n    case NodeTypes.ROOT:\n      // \u904D\u5386\u8282\u70B9\u7684\u5B50\u8282\u70B9\n      for (let i = 0; i < node.children.length; i++) {\n        // \u8BBE\u7F6E\u7236\u8282\u70B9\u4E3Anode\n        context.parent = node;\n        // \u9012\u5F52\u904D\u5386\u5B50\u8282\u70B9\n        traverseNode(node.children[i], context);\n      }\n      break;\n    case NodeTypes.INTERPOLATION:\n      context.helper(TO_DISPLAY_STRING); // \u7528\u4E8EJSON.stringify\n      break\n  }\n  // \u6700\u7EC8context.currentNode \u662F\u6700\u91CC\u9762\u7684\n  context.currentNode = node; // \u4FEE\u6B63currentNode;\n\n  let i = exitsFns.length\n  while (i--) {\n    exitsFns[i]()\n  }\n}\n\n\nfunction createTransformContext(root) {\n  const context = {\n    currentNode: root, // \u5F53\u524D\u8F6C\u5316\u8282\u70B9 \n    parent: null,   // \u5F53\u524D\u8F6C\u5316\u8282\u70B9\u7684\u7236\u8282\u70B9\n    nodeTransforms: [ // \u8F6C\u5316\u65B9\u6CD5\n      transformElement,\n      transformText,\n      transformExpression\n    ],\n    helpers: new Map(), // \u521B\u5EFA\u5E2E\u52A9\u6620\u5C04\u8868\uFF0C\u8BB0\u5F55\u8C03\u7528\u65B9\u6CD5\u6B21\u6570\n    helper(name) {\n      const count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1)\n      return name\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name);\n      if (count) {\n        const currentCount = count - 1;\n        if (!currentCount) {\n          context.helpers.delete(name);\n        } else {\n          context.helpers.set(name, currentCount)\n        }\n      }\n    },\n  }\n  return context\n}\n\n\n/**\n * \u521B\u5EFA\u6839\u4EE3\u7801\u751F\u6210\n *\n * @param root \u6839\u8282\u70B9\n * @param context \u4E0A\u4E0B\u6587\n * @returns \u65E0\u8FD4\u56DE\u503C\n */\nfunction createRootCodegen(root, context) {\n  // \u83B7\u53D6\u6839\u8282\u70B9\u7684\u5B50\u8282\u70B9\n  let { children } = root\n  // \u5982\u679C\u53EA\u6709\u4E00\u4E2A\u5B50\u8282\u70B9\n  if (children.length == 1) {\n    // \u53D6\u7B2C\u4E00\u4E2A\u5B50\u8282\u70B9\n    const child = children[0];\n    // \u5982\u679C\u5B50\u8282\u70B9\u7C7B\u578B\u662F\u5143\u7D20\u5E76\u4E14\u6709codegenNode\u5C5E\u6027\n    if (child.type === NodeTypes.ELEMENT && child.codegenNode) {\n      // \u5C06codegenNode\u8D4B\u503C\u7ED9child\u7684codegenNode\u5C5E\u6027\n      const codegenNode = child.codegenNode;\n      // \u5C06child\u7684codegenNode\u8D4B\u503C\u7ED9root\u7684codegenNode\n      root.codegenNode = codegenNode;\n      // \u4E0D\u8981\u521B\u5EFA\u5143\u7D20\n      context.removeHelper(CREATE_ELEMENT_VNODE); // \u4E0D\u8981\u521B\u5EFA\u5143\u7D20\n      // \u521B\u5EFA\u5143\u7D20block\u5C31\u597D\u4E86\n      context.helper(OPEN_BLOCK)\n      context.helper(CREATE_ELEMENT_BLOCK); // \u521B\u5EFA\u5143\u7D20block\u5C31\u597D\u4E86\n      // \u53EA\u6709\u4E00\u4E2A\u5143\u7D20\u8282\u70B9\uFF0C\u90A3\u4E48\u4ED6\u5C31\u662Fblock\u8282\u70B9\n      root.codegenNode.isBlock = true; // \u53EA\u6709\u4E00\u4E2A\u5143\u7D20\u8282\u70B9\uFF0C\u90A3\u4E48\u4ED6\u5C31\u662Fblock\u8282\u70B9\n    } else {\n      // \u76F4\u63A5\u7528\u91CC\u9762\u7684\u8282\u70B9\u6362\u6389\n      root.codegenNode = child; // \u76F4\u63A5\u7528\u91CC\u9762\u7684\u8282\u70B9\u6362\u6389\n    }\n  } else {\n    // \u521B\u5EFAvnode\u8C03\u7528\n    root.codegenNode = createVNodeCall(context, context.helper(FRAGMENT), undefined, root.children)\n    // \u521B\u5EFAblock\n    context.helper(OPEN_BLOCK)\n    // \u521B\u5EFA\u5143\u7D20block\n    context.helper(CREATE_ELEMENT_BLOCK)\n    // \u589E\u52A0block fragment\n    root.codegenNode.isBlock = true; // \u589E\u52A0block fragment\n  }\n}\n\n\n/**\n * \u5C06\u8282\u70B9\u6811\u8FDB\u884C\u8F6C\u5316\n *\n * @param root \u6839\u8282\u70B9\n */\nexport function transform(root) {\n  // \u521B\u5EFA\u8F6C\u5316\u7684\u4E0A\u4E0B\u6587, \u8BB0\u5F55\u8F6C\u5316\u65B9\u6CD5\u53CA\u5F53\u524D\u8F6C\u5316\u8282\u70B9\n  let context = createTransformContext(root)\n  // \u9012\u5F52\u904D\u5386\n  traverseNode(root, context)\n\n  createRootCodegen(root, context); // \u751F\u6210\u6839\u8282\u70B9\u7684codegen\n  root.helpers = [...context.helpers.keys()]\n  console.log('root=>', root)\n}\n", "import { baseParse } from \"./parser\";\nimport { transform } from \"./transform\";\n\nexport function compile(template) {\n  // 1.\u5C06\u6A21\u677F\u8F6C\u5316\u6210ast\u8BED\u6CD5\u6811\n  const ast = baseParse(template);\n  // 2.\u5BF9ast\u8BED\u6CD5\u6811\u8FDB\u884C\u8F6C\u5316\n  transform(ast) // \u5BF9ast\u8BED\u6CD5\u6811\u8FDB\u884C\u8F6C\u5316  \u7ED9ast\u8282\u70B9\u662F\u589E\u52A0\u4E00\u4E9B\u989D\u5916\u7684\u4FE1\u606F  codegenNode, \u6536\u96C6\u9700\u8981\u5BFC\u5165\u7684\u65B9\u6CD5\n\n  console.log('ast=>', ast)\n\n}\n"],
  "mappings": "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",
  "names": ["FRAGMENT", "CREATE_ELEMENT_BLOCK", "OPEN_BLOCK", "helperNameMap", "i"]
}
